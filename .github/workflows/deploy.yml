name: Deploy Lambda

on:
  push:
    tags:
      - "deploy-*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # AWS 인증 설정
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # github secret
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and deploy
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          CSS_PATH: ${{ secrets.CSS_PATH }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.ref_name }}
        # --build arg : Dockerfile ARG 환경변수 전달
        run: |
          echo "S3_BUCKET: $S3_BUCKET"
          echo "AWS_REGION: $AWS_REGION"

          docker build --platform linux/amd64 \
            --build-arg S3_BUCKET=$S3_BUCKET \
            --build-arg CSS_PATH=$CSS_PATH \
            --build-arg AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID \
            --build-arg AWS_REGION=$AWS_REGION \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .



          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          aws lambda update-function-code \
            --function-name ${{secrets.LAMBDA_FUNCTION_NAME}} \
            --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
